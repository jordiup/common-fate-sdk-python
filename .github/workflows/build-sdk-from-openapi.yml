name: Clone/Build SDK from OpenAPI

on:
  push:
    paths:
      - 'release-versions/*'

# steps involved
# on new release trigger a clone/build using the new version
# - extract the version from the release-versions/tags-latest.txt file
# i.e. https://raw.githubusercontent.com/common-fate/common-fate/[VERSION/openapi.yml
# - install the file into a /ci-temp dir
# - run the generate-on-ci command
# - commit the changes to the repo

# intialise some vars for re-use
env:
  pkg_name: jhc_cf_sdk_test

jobs:
  clone-openapi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_SCOPED_TOKEN }}
      - name: Get latest release version
        id: get_version
        run: |
          echo $(cat release-versions/tags-latest.txt)
          echo "::set-output name=version::$(cat release-versions/tags-latest.txt)"
      - name: Clone OpenAPI
        run: |
          mkdir ci-temp
          cd ci-temp
          mkdir accesshandler
          curl -sL https://raw.githubusercontent.com/common-fate/common-fate/${{ steps.get_version.outputs.version }}/openapi.yml > openapi.yml      # https://github.com/marketplace/actions/generate-client-library-w-the-openapitools-generator
          curl -sL https://raw.githubusercontent.com/common-fate/common-fate/${{ steps.get_version.outputs.version }}/accesshandler/openapi.yml > ./accesshandler/openapi.yml
          _JAVA_OPTIONS="--add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED"
      - name: Install OpenAPI Generator
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: python
          # config-file: openapi-generator-config.json
          openapi-file: ci-temp/openapi.yml
          command-args: --package-name=${{ env.pkg_name }}  --skip-validate-spec
      - name: Cleanup
        run: |
          rm -rf ${{ env.pkg_name }}
          mkdir ${{ env.pkg_name }}
          mv python-client ${{ env.pkg_name }}
          rm -rf ci-temp python-client
      - name: Commit changes
        run: |
          git config --global user.name 'Your Name'
          git config --global user.email 'your-email@users.noreply.github.com'
          git add .
          git commit -am "New release version"
          git push
